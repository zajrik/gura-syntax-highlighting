{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Gura",
	"scopeName": "source.ura",

	"patterns": [
		{ "include": "#comment-line" },
		{ "include": "#keyword-import" },
		{ "include": "#variable-name" },
		{ "include": "#key-name" },
		{ "include": "#array-braces" },
		{ "include": "#strings" },
		{ "include": "#numbers" },
		{ "include": "#boolean" },
		{ "include": "#keyword-null" }
	],

	"repository": {
		"comment-line": {
			"name": "comment.line.ura",
			"begin": "#",
			"end": "$"
		},

		"variable-name": {
			"begin": "(?<!\\\\)(\\$\\w+)",
			"beginCaptures": {
				"1": { "name": "variable.parameter.ura" }
			},
			"end": "[^\\w]"
		},

		"key-name": {
			"match": "(\\w+)(:)",
			"captures": {
				"1": { "name": "support.type.property-name.ura" },
				"2": { "name": "keyword.operator.ura"}
			}
		},

		"array-braces": {
			"match": "(\\[)|(\\])",
			"captures": {
				"1": { "name": "punctuation.definition.array.start.ura" },
				"2": { "name": "punctuation.definition.array.end.ura" }
			}
		},

		"strings": {
			"patterns": [
				{ "include": "#triple-double-quote-string" },
				{ "include": "#single-double-quote-string" },
				{ "include": "#triple-single-quote-string" },
				{ "include": "#single-single-quote-string" }
			]
		},

		"escape-character": {
			"name": "constant.character.escape.ura",
			"match": "\\\\.|\\\\\\n"
		},

		"escape-unicode": {
			"name": "constant.character.escape.ura",
			"match": "\\\\u[\\da-fA-F]{4}"
		},

		"escape-unicode-long": {
			"name": "constant.character.escape.ura",
			"match": "\\\\U[\\da-fA-F]{8}"
		},

		"single-double-quote-string": {
			"name": "string.quoted.ura",
			"begin": "\"",
			"end": "$|\"",
			"patterns": [
				{ "include": "#variable-name"},
				{ "include": "#escape-unicode" },
				{ "include": "#escape-unicode-long" },
				{ "include": "#escape-character" }
			]
		},

		"triple-double-quote-string": {
			"name": "string.quoted.ura",
			"begin": "\"\"\"",
			"end": "\"\"\"",
			"patterns": [
				{ "include": "#variable-name"},
				{ "include": "#escape-unicode" },
				{ "include": "#escape-unicode-long" },
				{ "include": "#escape-character" }
			]
		},

		"single-single-quote-string": {
			"name": "string.quoted.ura",
			"begin": "'",
			"end": "$|'"
		},

		"triple-single-quote-string": {
			"name": "string.quoted.ura",
			"begin": "'''",
			"end": "'''"
		},

		"numbers": {
			"patterns": [
				{ "include": "#number" },
				{ "include": "#number-hex" },
				{ "include": "#number-octal" },
				{ "include": "#number-binary" },
				{ "include": "#keyword-inf" }
			]
		},

		"number": {
			"name": "constant.numeric.ura",
			"match": "(?x)\n(?<!\\$)(?:\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|\n  (?:\\b[0-9][0-9_]*(\\.)[eE][+-]?[0-9][0-9_]*\\b)|\n  (?:\\B(\\.)[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|\n  (?:\\b[0-9][0-9_]*[eE][+-]?[0-9][0-9_]*\\b)|\n  (?:\\b[0-9][0-9_]*(\\.)[0-9][0-9_]*\\b)|\n  (?:\\b[0-9][0-9_]*(\\.)\\B)|\n  (?:\\B(\\.)[0-9][0-9_]*\\b)|\n  (?:\\b[0-9][0-9_]*\\b(?!\\.))\n)(?!\\$)"
		},

		"number-hex": {
			"name": "constant.numeric.hex.ura",
			"match": "\\b0x[\\da-fA-F][\\da-fA-F_]*\\b"
		},

		"number-octal": {
			"name": "constant.numeric.octal.ura",
			"match": "\\b0o[0-7][0-7_]*\\b"
		},

		"number-binary": {
			"name": "constant.numeric.binary.ura",
			"match": "\\b0b[01][01_]*\\b"
		},


		"keyword-inf": {
			"name": "constant.language.infinity.ura",
			"match": "\\binf\\b"
		},

		"boolean": {
			"name": "constant.language.boolean.ura",
			"match": "\\b(true|false)\\b"
		},

		"keyword-import": {
			"name": "keyword.other.import.ura",
			"match": "\\bimport\\b"
		},

		"keyword-null": {
			"name": "constant.language.ura",
			"match": "\\bnull\\b"
		}
	}
}
